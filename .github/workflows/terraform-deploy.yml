name: Terraform deploy
on:
  pull_request:
    types: [ closed ]
jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    env:
     working-directory: .
     # credentials for the app reg that as permissions over azure subscriptions and the storage account where the tfstate is stored
     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
     ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    # this job will only run if the PR has been closed without being merged
    steps:
      - name: Check if PR was merged
        if: ${{ (github.event.pull_request.merged == false) }}
        run: |
          echo PR #${{ github.event.number }} has been closed without being merged
          exit 1

      # chechout de code from the source branch of the pull request to the agent's workspace
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Give permissions
        run: |
          sudo chmod -R ugo+rwX .

      # select the terraform workspace based on destination branch of the pull request trough this conditional variable apply
      - name: Sets env vars for release
        run: |
          echo "TERRAFORM_WORKSPACE=tst" >> $GITHUB_ENV
        if: ${{ (github.base_ref == 'integration') }}

      - name: Sets env vars for release
        run: |
          echo "TERRAFORM_WORKSPACE=pp" >> $GITHUB_ENV
        if: ${{ (github.base_ref == 'develop') }}

      - name: Sets env vars for release
        run: |
          echo "TERRAFORM_WORKSPACE=prd" >> $GITHUB_ENV
        if: ${{ (github.base_ref == 'main') }}

      - name: Access to modules repository
        uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.GITACTION_SSHKEY }}

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          # Required, workflow file name or ID
          workflow: terraform-analysis.yml
          workflow_conclusion: success
          # Optional, will get head commit SHA
          pr: ${{github.event.pull_request.number}}
          # Optional, directory where to extract artifact. Defaults to the artifact name (see `name` input)
          path: ./plans
          # Optional, defaults to current repo
          repo: ${{github.repository}}
          # Optional, check the workflow run whether it has an artifact
          # then will get the last available artifact from previous workflow
          # default false, just try to download from the last one
          check_artifacts:  false

      - name: Move artifact files
        run: |
          ls -la ./plans/tfplan-${{ env.TERRAFORM_WORKSPACE }}-${{ github.event.pull_request.number }}/
          cp ./plans/tfplan-${{ env.TERRAFORM_WORKSPACE }}-${{ github.event.pull_request.number }}/.terraform.lock.hcl .
          cp ./plans/tfplan-${{ env.TERRAFORM_WORKSPACE }}-${{ github.event.pull_request.number }}/* .
          ls -la
          sudo chmod -R ugo+rwX .
        working-directory: .


      
      # install terraform cli in the agent
      - name: Install terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.3

      # initialize terrform
      - name: Terraform Version
        id: version
        run: sudo terraform version
      

      # initialize terrform
      - name: Terraform Init
        id: init
        run: terraform init

      # select the desired workspace
      - name: Terraform workspace select
        id: workspace
        run: terraform workspace select ${{ env.TERRAFORM_WORKSPACE }}

      - name: Terraform show
        run: terraform show tfplan -no-color
        working-directory: .

      - name: Terraform apply
        run: terraform apply -input=false -no-color tfplan 
        working-directory: .
